#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright 2010-2013 CÃ³digo Sur Sociedad Civil.
# All rights reserved.
#
# This file is part of Cyclope.
#
# Cyclope is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Cyclope is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os
import sys
from optparse import make_option

import django
from django.core.management.base import CommandError
from django.core.management.templates import TemplateCommand
from django.core.management import call_command
from django.utils.crypto import get_random_string
from django.utils.importlib import import_module

import cyclope

class Command(TemplateCommand):
    help = ("Creates a Cyclope project directory structure for the given "
            "project name in the current directory.")

    template = os.path.join(cyclope.__path__[0], "conf", "project_template")

    option_list = TemplateCommand.option_list + (
        make_option('--directory', action='store', dest='directory',
            default=".", help='Destination directory '
                'where the project will be created.'),
    )

    def handle(self, project_name=None, target=None, *args, **options):
        # use django startproject with our template
        val = os.system("django-admin.py startproject %s --template=%s" % (project_name, self.template))
        if options['verbosity'] != "0":
            print u"\nProject %s created successfully!\n" % project_name
            
        # extra folders TODO(NumericA) add them from template
        directory = options.get("directory")
        top_dir = os.path.join(directory, project_name)
        #/media
        media_dir = os.path.join(top_dir, "media")
        os.mkdir(media_dir)
        #/static
        static_dir = os.path.join(top_dir, "static")
        os.mkdir(static_dir)
        # Create db
        os.mkdir(os.path.join(top_dir, "db"))

        # Database creation
        sys.path.insert(0, ".")
        os.environ.setdefault("DJANGO_SETTINGS_MODULE", project_name +".settings")
        call_command("creardb")


if __name__ == "__main__":
    cmnd = Command()
    if len(sys.argv) == 1:
        cmnd.print_help("startproject", "")
    else:
        sys.argv.insert(0, "") # Hack run_from_argv
        cmnd.run_from_argv(sys.argv)
